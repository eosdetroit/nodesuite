--- # Installing Chronicle
- name: Install dependencies
  apt:
    update_cache: true
    state: present
    pkg:
    - gnupg
    - software-properties-common

- name: Add kitware apt-key
  apt_key:
    url: https://apt.kitware.com/keys/kitware-archive-latest.asc
    state: present

- name: add kitware repo
  apt_repository:
    repo: deb https://apt.kitware.com/ubuntu/ bionic main
    state: present

- name: add ubuntu-toolchain repo
  apt_repository:
    repo: ppa:ubuntu-toolchain-r/test

- name: Install dependencies
  apt:
    update_cache: true
    state: present
    force_apt_get: yes
    pkg:
    - git
    - g++-8
    - cmake
    - libssl-dev
    - libgmp-dev
    - zlib1g-dev
    - python-dev
    - python3-dev

- name: Update Alternative Links for gcc
  community.general.alternatives:
    name: gcc
    link: /usr/bin/gcc
    path: /usr/bin/gcc-8
    priority: 800

- name: Update Alternative Links for g++
  community.general.alternatives:
    name: g++
    link: /usr/bin/g++
    path: /usr/bin/g++-8

- name: Create directory
  file:
    path: "{{ working_dir }}/eos-chronicle/unpack"
    state: directory

- name: Get boost tar url
  get_url:
    url: https://boostorg.jfrog.io/artifactory/main/release/1.67.0/source/boost_1_67_0.tar.gz
    dest: "{{ working_dir }}/eos-chronicle/boost_tar.tar.gz"
    force: yes

- name: Unarchiving boost archive
  unarchive:
    src: "{{ working_dir }}/eos-chronicle/boost_tar.tar.gz"
    dest: "{{ working_dir }}/eos-chronicle/unpack/"
    remote_src: yes

- name: Running bootstrap script
  shell:
    cmd: "./bootstrap.sh"
    chdir: "{{ working_dir }}/eos-chronicle/unpack/boost_1_67_0/"

- name: Running 2nd bootstrap script
  shell:
    cmd: "./b2 install"
    chdir: "{{ working_dir }}/eos-chronicle/unpack/boost_1_67_0/"

- name: Clone Chronicle Repo
  git:
    repo: https://github.com/EOSChronicleProject/eos-chronicle.git
    dest: "{{ working_dir }}/eos-chronicle/build/eos-chronicle/"
    track_submodules: yes

- name: Creates directory
  file:
    path: "{{ working_dir }}/eos-chronicle/build/eos-chronicle/build"
    state: directory

- name: Running cmake
  shell:
    cmd: "cmake .."
    chdir: "{{ working_dir }}/eos-chronicle/build/eos-chronicle/build/"

- name: Running make
  shell:
    cmd: "make"
    chdir: "{{ working_dir }}/eos-chronicle/build/eos-chronicle/build/"

- name: Running make install
  shell:
    cmd: "make install"
    chdir: "{{ working_dir }}/eos-chronicle/build/eos-chronicle/build/"

- name: Create directory
  file:
    path: "{{ working_dir }}/chronicle-config/"
    state: directory
    owner: "{{ deploy_user }}"

- name: Template chronicle-receiver.service file
  template:
    src: chronicle-receiver.service.j2
    dest: "/etc/systemd/system/chronicle-receiver.service"


- name: Template chronicle-receiver config file
  template:
    src: config.ini.j2
    dest: "{{ working_dir }}/chronicle-config/config.ini"
    mode: 0644
    owner: "{{ deploy_user }}"
    group: "{{ deploy_group }}"

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes
  become: yes
  become_user: root

- name: Starting chronicle-receiver
  service:
    name: chronicle-receiver
    enabled: yes
    state: restarted

- include: lightapi.yml
